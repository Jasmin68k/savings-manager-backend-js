const mongoose = require('mongoose')
const AutoIncrementFactory = require('mongoose-sequence')
const AutoIncrement = AutoIncrementFactory(mongoose)

const transactionSchema = new mongoose.Schema(
  {
    description: {
      type: String,
      required: false,
      default: '',
      comment: 'The description of the transaction action.'
    },
    transaction_type: {
      type: String,
      required: [true, 'Transaction type is required'],
      // enum: ['DIRECT', 'DISTRIBUTION'],
      // Uppercase strings for direct/distribution are not enforced, although generated by Alembic, in the original Python backend, examples/tests use lowercase. For now using lowercase here.
      enum: ['direct', 'distribution'],
      comment:
        'The type of the transaction. Possible values: direct or distribution.'
    },
    transaction_trigger: {
      type: String,
      required: [true, 'Transaction trigger is required'],
      // enum: ['MANUALLY', 'AUTOMATICALLY'],
      // Uppercase strings for manually/automatically are not enforced, although generated by Alembic, in the original Python backend, examples/tests use lowercase. For now using lowercase here.
      enum: ['manually', 'automatically'],
      comment:
        'The transaction trigger type, possible values: manually, automatically. Says, if balance was deposit or withdrawn manually or automatically.'
    },
    amount: {
      type: Number,
      required: [true, 'Amount is required'],
      comment:
        'The current amount of the transaction. Can be negative, negative = withdraw, positive = deposit.'
    },
    balance: {
      type: Number,
      required: [true, 'Balance is required'],
      comment: 'The balance of the moneybox at the time of the transaction.'
    },
    counterparty_moneybox_id: {
      type: Number,
      ref: 'Moneybox',
      default: null,
      comment:
        'Transaction is a transfer between moneybox_id and counterparty_moneybox_id, if set.'
    },
    moneybox_id: {
      type: Number,
      ref: 'Moneybox',
      required: [true, 'Moneybox ID is required']
    },
    is_active: {
      type: Boolean,
      required: [true, 'is_active is required'],
      default: true,
      comment: 'Flag to mark instance as deleted.'
    },
    // While original Python backend resolves this on-the-fly, we store it in the database,
    // since we also add suffixes to deleted moneybox names.
    counterparty_moneybox_name: {
      type: String,
      default: null,
      minlength: [
        1,
        'Counterparty moneybox name must have at least 1 character'
      ],
      comment: 'The name of a counterparty moneybox.'
    }
  },
  // Unlike in original Python backend, modified_at is initialized with created_at value by default, not null.
  // This should not have any adverse effects.
  {
    timestamps: { createdAt: 'created_at', updatedAt: 'modified_at' }
  }
)

// To be compatible with original Python backend we use sequential integer ids instead of default MongoDB ObjectIds (_id).
transactionSchema.plugin(AutoIncrement, {
  id: 'transaction_id_counter',
  inc_field: 'id'
})

const Transaction = mongoose.model('Transaction', transactionSchema)

module.exports = Transaction
